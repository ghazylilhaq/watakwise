// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String    @id @default(cuid())
  email String?  @unique
  name  String?
  profile Profile?
  userPersonality UserPersonality?
  content Content[]
}

model Profile {
  id    String    @id @default(cuid())

  userId String     @unique
  user   User    @relation(fields: [userId], references: [id])
  bio    String?
  image  String?
  
}

model PersonalityCategory {
  id    String    @id @default(cuid())
  title     String @unique
  description String?
  isActive Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime?
  personalities Personality[]

}

model Personality {
  id    String    @id @default(cuid())
  name      String  @unique
  description String
  category  PersonalityCategory @relation(fields: [categoryTitle], references: [title])
  categoryTitle String
  personalitySelection PersonalitySelection[]

  }

model UserPersonality {
  id    String    @id @default(cuid())
  userId        String    @unique
  user          User    @relation(fields: [userId], references: [id])
  createdAt     DateTime @default(now())
  personalitySelection PersonalitySelection[]
}

model PersonalitySelection {
  personalityId String
  personality   Personality @relation(fields: [personalityId], references: [id])
  UserPersonalityId String 
  userPersonality UserPersonality @relation(fields: [UserPersonalityId], references: [id])
  @@id([personalityId, UserPersonalityId])
}

model ContentCategory {
  id    String    @id @default(cuid())
  title     String 
  description String
  createdAt DateTime @default(now())
  contents Content[]
}

model Content {
  id    String    @id @default(cuid())
  title     String
  description String
  contentCategoryId String
  contentCategory ContentCategory @relation(fields: [contentCategoryId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime?
  userId String
  user User @relation(fields: [userId], references: [id])
}